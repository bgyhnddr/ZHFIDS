//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace global.EOSFIDSReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicesBinding", Namespace="http://www.primeton.com/com.vicson.zuh.Services.Services/$promoted$.Services")]
    public partial class ServicesBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAbnormalCauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAircraftModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAirlinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAirportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDictEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDynamicSplitTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServicesBinding() {
            this.Url = global::global.Properties.Settings.Default.global_EOSFIDSReference_ServicesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAbnormalCauseCompletedEventHandler getAbnormalCauseCompleted;
        
        /// <remarks/>
        public event getAircraftModelCompletedEventHandler getAircraftModelCompleted;
        
        /// <remarks/>
        public event getAirlinesCompletedEventHandler getAirlinesCompleted;
        
        /// <remarks/>
        public event getAirportsCompletedEventHandler getAirportsCompleted;
        
        /// <remarks/>
        public event getDictEntryCompletedEventHandler getDictEntryCompleted;
        
        /// <remarks/>
        public event getFlightDetailsCompletedEventHandler getFlightDetailsCompleted;
        
        /// <remarks/>
        public event getFlightDynamicCompletedEventHandler getFlightDynamicCompleted;
        
        /// <remarks/>
        public event getFlightDynamicSplitTimeCompletedEventHandler getFlightDynamicSplitTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAbnormalCauseOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public System.Nullable<int> getAbnormalCause([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastRequestTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAbnormalCause", new object[] {
                        lastRequestTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAbnormalCauseAsync(string lastRequestTime) {
            this.getAbnormalCauseAsync(lastRequestTime, null);
        }
        
        /// <remarks/>
        public void getAbnormalCauseAsync(string lastRequestTime, object userState) {
            if ((this.getAbnormalCauseOperationCompleted == null)) {
                this.getAbnormalCauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAbnormalCauseOperationCompleted);
            }
            this.InvokeAsync("getAbnormalCause", new object[] {
                        lastRequestTime}, this.getAbnormalCauseOperationCompleted, userState);
        }
        
        private void OngetAbnormalCauseOperationCompleted(object arg) {
            if ((this.getAbnormalCauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAbnormalCauseCompleted(this, new getAbnormalCauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAircraftModelOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getAircraftModel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> modifyTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAircraftModel", new object[] {
                        modifyTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAircraftModelAsync(System.Nullable<System.DateTime> modifyTime) {
            this.getAircraftModelAsync(modifyTime, null);
        }
        
        /// <remarks/>
        public void getAircraftModelAsync(System.Nullable<System.DateTime> modifyTime, object userState) {
            if ((this.getAircraftModelOperationCompleted == null)) {
                this.getAircraftModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAircraftModelOperationCompleted);
            }
            this.InvokeAsync("getAircraftModel", new object[] {
                        modifyTime}, this.getAircraftModelOperationCompleted, userState);
        }
        
        private void OngetAircraftModelOperationCompleted(object arg) {
            if ((this.getAircraftModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAircraftModelCompleted(this, new getAircraftModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAirlinesOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public System.Nullable<int> getAirlines([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAirlines", new object[0]);
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAirlinesAsync() {
            this.getAirlinesAsync(null);
        }
        
        /// <remarks/>
        public void getAirlinesAsync(object userState) {
            if ((this.getAirlinesOperationCompleted == null)) {
                this.getAirlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAirlinesOperationCompleted);
            }
            this.InvokeAsync("getAirlines", new object[0], this.getAirlinesOperationCompleted, userState);
        }
        
        private void OngetAirlinesOperationCompleted(object arg) {
            if ((this.getAirlinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAirlinesCompleted(this, new getAirlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAirportsOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public System.Nullable<int> getAirports([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAirports", new object[0]);
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAirportsAsync() {
            this.getAirportsAsync(null);
        }
        
        /// <remarks/>
        public void getAirportsAsync(object userState) {
            if ((this.getAirportsOperationCompleted == null)) {
                this.getAirportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAirportsOperationCompleted);
            }
            this.InvokeAsync("getAirports", new object[0], this.getAirportsOperationCompleted, userState);
        }
        
        private void OngetAirportsOperationCompleted(object arg) {
            if ((this.getAirportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAirportsCompleted(this, new getAirportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getDictEntryOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outStr", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public string getDictEntry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dictTypeId) {
            object[] results = this.Invoke("getDictEntry", new object[] {
                        dictTypeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDictEntryAsync(string dictTypeId) {
            this.getDictEntryAsync(dictTypeId, null);
        }
        
        /// <remarks/>
        public void getDictEntryAsync(string dictTypeId, object userState) {
            if ((this.getDictEntryOperationCompleted == null)) {
                this.getDictEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDictEntryOperationCompleted);
            }
            this.InvokeAsync("getDictEntry", new object[] {
                        dictTypeId}, this.getDictEntryOperationCompleted, userState);
        }
        
        private void OngetDictEntryOperationCompleted(object arg) {
            if ((this.getDictEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDictEntryCompleted(this, new getDictEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDetailsOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public System.Nullable<int> getFlightDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateStr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> lastRequestTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getFlightDetails", new object[] {
                        dateStr,
                        lastRequestTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDetailsAsync(string dateStr, System.Nullable<System.DateTime> lastRequestTime) {
            this.getFlightDetailsAsync(dateStr, lastRequestTime, null);
        }
        
        /// <remarks/>
        public void getFlightDetailsAsync(string dateStr, System.Nullable<System.DateTime> lastRequestTime, object userState) {
            if ((this.getFlightDetailsOperationCompleted == null)) {
                this.getFlightDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDetailsOperationCompleted);
            }
            this.InvokeAsync("getFlightDetails", new object[] {
                        dateStr,
                        lastRequestTime}, this.getFlightDetailsOperationCompleted, userState);
        }
        
        private void OngetFlightDetailsOperationCompleted(object arg) {
            if ((this.getFlightDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDetailsCompleted(this, new getFlightDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDynamicOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public System.Nullable<int> getFlightDynamic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateStr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> lastModifyTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string flightCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getFlightDynamic", new object[] {
                        dateStr,
                        lastModifyTime,
                        flightCode});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDynamicAsync(string dateStr, System.Nullable<System.DateTime> lastModifyTime, string flightCode) {
            this.getFlightDynamicAsync(dateStr, lastModifyTime, flightCode, null);
        }
        
        /// <remarks/>
        public void getFlightDynamicAsync(string dateStr, System.Nullable<System.DateTime> lastModifyTime, string flightCode, object userState) {
            if ((this.getFlightDynamicOperationCompleted == null)) {
                this.getFlightDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDynamicOperationCompleted);
            }
            this.InvokeAsync("getFlightDynamic", new object[] {
                        dateStr,
                        lastModifyTime,
                        flightCode}, this.getFlightDynamicOperationCompleted, userState);
        }
        
        private void OngetFlightDynamicOperationCompleted(object arg) {
            if ((this.getFlightDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDynamicCompleted(this, new getFlightDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDynamicSplitTimeOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outStr", IsNullable=true)]
        [SoapHeader("EosSoapHeaderValue")]
        public string getFlightDynamicSplitTime() {
            object[] results = this.Invoke("getFlightDynamicSplitTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDynamicSplitTimeAsync() {
            this.getFlightDynamicSplitTimeAsync(null);
        }
        
        /// <remarks/>
        public void getFlightDynamicSplitTimeAsync(object userState) {
            if ((this.getFlightDynamicSplitTimeOperationCompleted == null)) {
                this.getFlightDynamicSplitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDynamicSplitTimeOperationCompleted);
            }
            this.InvokeAsync("getFlightDynamicSplitTime", new object[0], this.getFlightDynamicSplitTimeOperationCompleted, userState);
        }
        
        private void OngetFlightDynamicSplitTimeOperationCompleted(object arg) {
            if ((this.getFlightDynamicSplitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDynamicSplitTimeCompleted(this, new getFlightDynamicSplitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicesSOAPBinding", Namespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services")]
    public partial class ServicesSOAPBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAbnormalCauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAircraftModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAirlinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAirportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDictEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlightDynamicSplitTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServicesSOAPBinding() {
            this.Url = global::global.Properties.Settings.Default.global_EOSFIDSReference_Services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAbnormalCauseCompletedEventHandler getAbnormalCauseCompleted;
        
        /// <remarks/>
        public event getAircraftModelCompletedEventHandler getAircraftModelCompleted;
        
        /// <remarks/>
        public event getAirlinesCompletedEventHandler getAirlinesCompleted;
        
        /// <remarks/>
        public event getAirportsCompletedEventHandler getAirportsCompleted;
        
        /// <remarks/>
        public event getDictEntryCompletedEventHandler getDictEntryCompleted;
        
        /// <remarks/>
        public event getFlightDetailsCompletedEventHandler getFlightDetailsCompleted;
        
        /// <remarks/>
        public event getFlightDynamicCompletedEventHandler getFlightDynamicCompleted;
        
        /// <remarks/>
        public event getFlightDynamicSplitTimeCompletedEventHandler getFlightDynamicSplitTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAbnormalCauseOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getAbnormalCause([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastRequestTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAbnormalCause", new object[] {
                        lastRequestTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAbnormalCauseAsync(string lastRequestTime) {
            this.getAbnormalCauseAsync(lastRequestTime, null);
        }
        
        /// <remarks/>
        public void getAbnormalCauseAsync(string lastRequestTime, object userState) {
            if ((this.getAbnormalCauseOperationCompleted == null)) {
                this.getAbnormalCauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAbnormalCauseOperationCompleted);
            }
            this.InvokeAsync("getAbnormalCause", new object[] {
                        lastRequestTime}, this.getAbnormalCauseOperationCompleted, userState);
        }
        
        private void OngetAbnormalCauseOperationCompleted(object arg) {
            if ((this.getAbnormalCauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAbnormalCauseCompleted(this, new getAbnormalCauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAircraftModelOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getAircraftModel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> modifyTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAircraftModel", new object[] {
                        modifyTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAircraftModelAsync(System.Nullable<System.DateTime> modifyTime) {
            this.getAircraftModelAsync(modifyTime, null);
        }
        
        /// <remarks/>
        public void getAircraftModelAsync(System.Nullable<System.DateTime> modifyTime, object userState) {
            if ((this.getAircraftModelOperationCompleted == null)) {
                this.getAircraftModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAircraftModelOperationCompleted);
            }
            this.InvokeAsync("getAircraftModel", new object[] {
                        modifyTime}, this.getAircraftModelOperationCompleted, userState);
        }
        
        private void OngetAircraftModelOperationCompleted(object arg) {
            if ((this.getAircraftModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAircraftModelCompleted(this, new getAircraftModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAirlinesOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getAirlines([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAirlines", new object[0]);
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAirlinesAsync() {
            this.getAirlinesAsync(null);
        }
        
        /// <remarks/>
        public void getAirlinesAsync(object userState) {
            if ((this.getAirlinesOperationCompleted == null)) {
                this.getAirlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAirlinesOperationCompleted);
            }
            this.InvokeAsync("getAirlines", new object[0], this.getAirlinesOperationCompleted, userState);
        }
        
        private void OngetAirlinesOperationCompleted(object arg) {
            if ((this.getAirlinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAirlinesCompleted(this, new getAirlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getAirportsOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getAirports([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getAirports", new object[0]);
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getAirportsAsync() {
            this.getAirportsAsync(null);
        }
        
        /// <remarks/>
        public void getAirportsAsync(object userState) {
            if ((this.getAirportsOperationCompleted == null)) {
                this.getAirportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAirportsOperationCompleted);
            }
            this.InvokeAsync("getAirports", new object[0], this.getAirportsOperationCompleted, userState);
        }
        
        private void OngetAirportsOperationCompleted(object arg) {
            if ((this.getAirportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAirportsCompleted(this, new getAirportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getDictEntryOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outStr", IsNullable=true)]
        public string getDictEntry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dictTypeId) {
            object[] results = this.Invoke("getDictEntry", new object[] {
                        dictTypeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDictEntryAsync(string dictTypeId) {
            this.getDictEntryAsync(dictTypeId, null);
        }
        
        /// <remarks/>
        public void getDictEntryAsync(string dictTypeId, object userState) {
            if ((this.getDictEntryOperationCompleted == null)) {
                this.getDictEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDictEntryOperationCompleted);
            }
            this.InvokeAsync("getDictEntry", new object[] {
                        dictTypeId}, this.getDictEntryOperationCompleted, userState);
        }
        
        private void OngetDictEntryOperationCompleted(object arg) {
            if ((this.getDictEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDictEntryCompleted(this, new getDictEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDetailsOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getFlightDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateStr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> lastRequestTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getFlightDetails", new object[] {
                        dateStr,
                        lastRequestTime});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDetailsAsync(string dateStr, System.Nullable<System.DateTime> lastRequestTime) {
            this.getFlightDetailsAsync(dateStr, lastRequestTime, null);
        }
        
        /// <remarks/>
        public void getFlightDetailsAsync(string dateStr, System.Nullable<System.DateTime> lastRequestTime, object userState) {
            if ((this.getFlightDetailsOperationCompleted == null)) {
                this.getFlightDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDetailsOperationCompleted);
            }
            this.InvokeAsync("getFlightDetails", new object[] {
                        dateStr,
                        lastRequestTime}, this.getFlightDetailsOperationCompleted, userState);
        }
        
        private void OngetFlightDetailsOperationCompleted(object arg) {
            if ((this.getFlightDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDetailsCompleted(this, new getFlightDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDynamicOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nResult", IsNullable=true)]
        public System.Nullable<int> getFlightDynamic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dateStr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> lastModifyTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string flightCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string outStr) {
            object[] results = this.Invoke("getFlightDynamic", new object[] {
                        dateStr,
                        lastModifyTime,
                        flightCode});
            errMsg = ((string)(results[1]));
            outStr = ((string)(results[2]));
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDynamicAsync(string dateStr, System.Nullable<System.DateTime> lastModifyTime, string flightCode) {
            this.getFlightDynamicAsync(dateStr, lastModifyTime, flightCode, null);
        }
        
        /// <remarks/>
        public void getFlightDynamicAsync(string dateStr, System.Nullable<System.DateTime> lastModifyTime, string flightCode, object userState) {
            if ((this.getFlightDynamicOperationCompleted == null)) {
                this.getFlightDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDynamicOperationCompleted);
            }
            this.InvokeAsync("getFlightDynamic", new object[] {
                        dateStr,
                        lastModifyTime,
                        flightCode}, this.getFlightDynamicOperationCompleted, userState);
        }
        
        private void OngetFlightDynamicOperationCompleted(object arg) {
            if ((this.getFlightDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDynamicCompleted(this, new getFlightDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", ResponseElementName="getFlightDynamicSplitTimeOutMsg", ResponseNamespace="http://www.primeton.com/com.vicson.zuh/com/vicson/zuh/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outStr", IsNullable=true)]
        public string getFlightDynamicSplitTime() {
            object[] results = this.Invoke("getFlightDynamicSplitTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFlightDynamicSplitTimeAsync() {
            this.getFlightDynamicSplitTimeAsync(null);
        }
        
        /// <remarks/>
        public void getFlightDynamicSplitTimeAsync(object userState) {
            if ((this.getFlightDynamicSplitTimeOperationCompleted == null)) {
                this.getFlightDynamicSplitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlightDynamicSplitTimeOperationCompleted);
            }
            this.InvokeAsync("getFlightDynamicSplitTime", new object[0], this.getFlightDynamicSplitTimeOperationCompleted, userState);
        }
        
        private void OngetFlightDynamicSplitTimeOperationCompleted(object arg) {
            if ((this.getFlightDynamicSplitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlightDynamicSplitTimeCompleted(this, new getFlightDynamicSplitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAbnormalCauseCompletedEventHandler(object sender, getAbnormalCauseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAbnormalCauseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAbnormalCauseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAircraftModelCompletedEventHandler(object sender, getAircraftModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAircraftModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAircraftModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAirlinesCompletedEventHandler(object sender, getAirlinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAirlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAirlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAirportsCompletedEventHandler(object sender, getAirportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAirportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAirportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDictEntryCompletedEventHandler(object sender, getDictEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDictEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDictEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getFlightDetailsCompletedEventHandler(object sender, getFlightDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFlightDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFlightDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getFlightDynamicCompletedEventHandler(object sender, getFlightDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFlightDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFlightDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string outStr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getFlightDynamicSplitTimeCompletedEventHandler(object sender, getFlightDynamicSplitTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFlightDynamicSplitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFlightDynamicSplitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591